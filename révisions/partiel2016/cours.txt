1) 

2) Runnable permet de modifier la méthode run() pour définir un comportement
spécifique à chaque thread correspondant à une instance de l'objet créé.
De plus, si on étend Thread, on peut oublier de définir un comportement
au Thread et cela ne produira pas d'erreur alors que si on l'oublie dans le
Runnable, cela lève une exception.

3) Exclusion mutuelle, les processus utilisent simultanément plusieurs
ressources acquises au fur et à mesure de l'exécution sans libérer les
précédentes, réservation des ressources potentiellement bloquante, cycle de
processus qui attend une ressource d'un processus qui est censé le précéder
mais qui est déjà exécuté.

EX2

1) Ce n'est pas un problème : par défaut, constructeur vide

2) Il faut mettre un static devant le compteur dans les classes Premier
et Second et on les laisse protégés.

3) On met dans les méthodes inserer() et retirer() le l.unlock() à la toute
fin de la méthode, et en dessous du finally on les met dans le try catch.




